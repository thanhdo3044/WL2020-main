/*
DECLARE @E INT

EXEC Proc_createPallet
999998,
200,
100000,
100001,
100000,
@ERROR = @E OUTPUT
*/

--SELECT * FROM prod.PALLET

CREATE OR ALTER PROC Proc_createPalletV2
@FROM_ID INT,
@TO_ID INT,
@ITEM NVARCHAR(MAX), --'100000-10,100001-20'
@ITEM_ID INT,
@QUANTITY MONEY,
@MATERIALS_ID INT,
@MATERIALS_QUANTITY INT,
@PLAN_ID INT,
@TYPE_ID INT,
@IKEA_CODE VARCHAR(100),
@IKEA_GUID VARCHAR(100),
@VENDOR_ID INT, -- Phụ
@WOOD_TYPE_ID INT,
@PRODUCTION_ORDERS_ID INT,
@CHEMISTRY_ID INT, -- Phụ
@PARCEL NVARCHAR(500), -- Phụ
@PROJECT_PRODUCT_ID INT,
@RECEIPT_ID INT,
@ACCOUNT_ID INT,
@ERROR INT OUTPUT
AS
BEGIN
	SET XACT_ABORT ON
	BEGIN TRANSACTION
	-----------------------------------Tạo mã pallet----------------------------------------
	-- Tạo biến mã ballet
	DECLARE @PALLET_NUMBER INT
	-- Lấy ra mã ballet lớn nhất của tuần đó
	SELECT @PALLET_NUMBER = MAX([NUMBER])
	FROM prod.[PALLET]
	WHERE [YEAR] = YEAR(GETDATE())
	AND [WEEK] = DATEPART(WK,GETDATE())
	-- Nếu tuần đó chưa có mã ballet nào thì cho mã là 1, ko thì + 1
	IF @PALLET_NUMBER IS NULL
		BEGIN
			SET @PALLET_NUMBER = 1
		END
	ELSE
		BEGIN
			SET @PALLET_NUMBER = @PALLET_NUMBER + 1
		END
	DECLARE @PALLET_NUMBER_STRING VARCHAR(10)
	IF (@PALLET_NUMBER < 10)
	BEGIN
		SET @PALLET_NUMBER_STRING = CONCAT('000',@PALLET_NUMBER)
	END
	ELSE
	BEGIN
		IF (@PALLET_NUMBER < 100)
		BEGIN
			SET @PALLET_NUMBER_STRING = CONCAT('00',@PALLET_NUMBER)
		END
		ELSE
		BEGIN
			IF (@PALLET_NUMBER < 1000)
			BEGIN
				SET @PALLET_NUMBER_STRING = CONCAT('0',@PALLET_NUMBER)
			END
			ELSE
			BEGIN
				SET @PALLET_NUMBER_STRING = @PALLET_NUMBER
			END
		END
	END

	DECLARE @YEAR VARCHAR(20) = RIGHT(YEAR(GETDATE()),2)
	DECLARE @WEEK VARCHAR(20)
	IF DATEPART(WK,GETDATE()) < 10
	BEGIN
		SET @WEEK = CONCAT('0',DATEPART(WK,GETDATE()))
	END
	ELSE
	BEGIN
		SET @WEEK = DATEPART(WK,GETDATE())
	END
	-----------------------------------Tạo mã pallet----------------------------------------
	DECLARE @PALLET_ID INT
	DECLARE @PALLET_GUID UNIQUEIDENTIFIER = NEWID()
	DECLARE @STEP_OF_PALLET_ID INT
	DECLARE @STEP_OF_PALLET_GUID UNIQUEIDENTIFIER = NEWID()
	DECLARE @PACKAGE_ID INT
	DECLARE @PACKAGE_GUID UNIQUEIDENTIFIER = NEWID()	
	DECLARE @ITEM_IN_PACKAGE_ID INT
	DECLARE @ITEM_IN_PACKAGE_GUID UNIQUEIDENTIFIER = NEWID()

	--------------Kiểm tra mã Ikea--------------
	IF(@IKEA_GUID IS NOT NULL)
		BEGIN
			IF NOT EXISTS (
						SELECT ID FROM prod.PALLET WHERE IKEA_GUID = @IKEA_GUID
					)
				BEGIN
					DECLARE @LEN INT = LEN(@IKEA_CODE)
					DECLARE @INDEXOF19717 INT = CHARINDEX('19717',@IKEA_CODE)
					DECLARE @HEADER VARCHAR(100) = SUBSTRING(@IKEA_CODE, 1,3)
					DECLARE @MARKET VARCHAR(100) = SUBSTRING(@IKEA_CODE,4,@INDEXOF19717 - 4)
					DECLARE @ITEM_ID_TEMP INT

					SELECT @ITEM_ID_TEMP = PRODUCT_ID
					FROM base.[MARKET]
					WHERE [CODE] = @MARKET

					-- Kiểm tra các tham số
					IF (@LEN > 24 AND @LEN < 34 AND @INDEXOF19717 > 3 AND @HEADER = 240 AND @ITEM_ID_TEMP > 0 AND LEN(@IKEA_GUID) = 20 )
						BEGIN
							SET @ITEM_ID = @ITEM_ID_TEMP
							SET @QUANTITY = SUBSTRING(@IKEA_CODE, @INDEXOF19717 + 11, 6)
						END
					ELSE
						BEGIN
							ROLLBACK
							SET @ERROR = 4800
							RETURN
						END
				END
			ELSE
				BEGIN
					ROLLBACK
					SET @ERROR = 4801
					RETURN
				END
		END

	--------------Kiểm tra mã Ikea--------------
	-------------------Chèn mã và các thông tin chung của pallet----------------
	INSERT INTO prod.[PALLET]([GUID],[CODE],[YEAR],[WEEK],[NUMBER],IKEA_CODE,IKEA_GUID,[TYPE_ID],PROJECT_PRODUCT_ID,PARCEL,WOOD_TYPE_ID,PRODUCTION_ORDERS_ID,RECEIPT_ID,CREATE_BY,CREATE_DATE)
	VALUES (@PALLET_GUID,CONCAT(@YEAR,@WEEK,@PALLET_NUMBER_STRING),YEAR(GETDATE()),@WEEK,@PALLET_NUMBER,@IKEA_CODE,@IKEA_GUID,@TYPE_ID,@PROJECT_PRODUCT_ID,@PARCEL,@WOOD_TYPE_ID,@PRODUCTION_ORDERS_ID,@RECEIPT_ID,@ACCOUNT_ID, GETDATE())
	SELECT @PALLET_ID = ID FROM prod.[PALLET] WHERE [GUID] = @PALLET_GUID
	-- Tạo pallet thì ko cần ghi nhận pass với not pass
	INSERT INTO prod.[STEP_OF_PALLET]([GUID],PALLET_ID,STEP_ID,STEP_NEXT_ID,PLAN_ID,CREATE_BY,CREATE_DATE)
	VALUES(@STEP_OF_PALLET_GUID,@PALLET_ID,@FROM_ID,@TO_ID,@PLAN_ID,@ACCOUNT_ID, GETDATE())
	SELECT @STEP_OF_PALLET_ID = ID FROM prod.[STEP_OF_PALLET] WHERE [GUID] = @STEP_OF_PALLET_GUID
	-- Tạo package
	INSERT INTO prod.[PACKAGE]([GUID],STEP_OF_PALLET_ID,SOURCE_ID,DESTINATION_ID,[TYPE_ID],CREATE_BY,CREATE_DATE)
	VALUES(@PACKAGE_GUID,@STEP_OF_PALLET_ID,@FROM_ID,@TO_ID,@TYPE_ID,@ACCOUNT_ID,GETDATE())
	SELECT @PACKAGE_ID = ID FROM prod.[PACKAGE] WHERE [GUID] = @PACKAGE_GUID

	-- nếu tạo nội bộ trong kho thì sẽ xác nhận luôn
	IF (@FROM_ID = @TO_ID)
	BEGIN
		UPDATE prod.[PACKAGE]
		SET VERIFY_BY = @ACCOUNT_ID,VERIFY_DATE = GETDATE()
		WHERE ID = @PACKAGE_ID
	END
	-------------------Chèn mã và các thông tin chung của pallet----------------
	
	-------------------chèn item in pallet----------------------------
	IF(@ITEM_ID > 0) -- Nếu có 1 item
		BEGIN
			-- chèn item in pallet
			INSERT INTO prod.[ITEM_IN_PALLET]([GUID],PALLET_ID,ITEM_ID,QUANTITY)
			VALUES (NEWID(),@PALLET_ID,@ITEM_ID,@QUANTITY)

			INSERT INTO prod.[ITEM_IN_PACKAGE]([GUID],PACKAGE_ID,ITEM_ID,QUANTITY)
			VALUES (@ITEM_IN_PACKAGE_GUID,@PACKAGE_ID,@ITEM_ID,@QUANTITY)
			SELECT @ITEM_IN_PACKAGE_ID = ID FROM prod.[ITEM_IN_PACKAGE] WHERE [GUID] = @ITEM_IN_PACKAGE_GUID
			-- Mức độ ưu tiên
			-- Kiểm tra xem có nguyên vật liệu gốc không
			-- Kiểm tra Bom
			-- Lấy chính sản phẩm xuất

			IF @MATERIALS_ID > 0
				BEGIN
					INSERT INTO prod.[MATERIALS_IN_PACKAGE]([GUID],[ITEM_IN_PACKAGE_ID],[ITEM_ID],QUANTITY)
					VALUES (NEWID(),@ITEM_IN_PACKAGE_ID,@MATERIALS_ID,@MATERIALS_QUANTITY)
				END
			ELSE
				BEGIN
					IF EXISTS (
								SELECT ID
								FROM prod.[BOM]
								WHERE ITEM_ID = @ITEM_ID
							)
						BEGIN -- nếu mà có bom cho sản phẩm xuất thì lấy theo bom
							INSERT INTO prod.[MATERIALS_IN_PACKAGE]([GUID],[ITEM_IN_PACKAGE_ID],[ITEM_ID],QUANTITY)
							SELECT NEWID(),@ITEM_IN_PACKAGE_ID,MATERIALS_ID,RATE*@QUANTITY
							FROM prod.BOM
							WHERE ITEM_ID = @ITEM_ID
						END
					ELSE
						BEGIN
							INSERT INTO prod.[MATERIALS_IN_PACKAGE]([GUID],[ITEM_IN_PACKAGE_ID],[ITEM_ID],QUANTITY)
							VALUES (NEWID(),@ITEM_IN_PACKAGE_ID,@ITEM_ID,@QUANTITY)
						END
				END
		END
	ELSE -- nếu có > 1 item
		BEGIN
			INSERT INTO prod.[ITEM_IN_PALLET]([GUID],PALLET_ID,ITEM_ID,QUANTITY)
			SELECT NEWID(),@PALLET_ID,SUBSTRING([VALUE],1,6),SUBSTRING([VALUE],8,LEN([VALUE]))
			FROM STRING_SPLIT(@ITEM,',')
		
			INSERT INTO prod.[ITEM_IN_PACKAGE]([GUID],PACKAGE_ID,ITEM_ID,QUANTITY)
			SELECT NEWID(),@PACKAGE_ID,SUBSTRING([VALUE],1,6),SUBSTRING([VALUE],8,LEN([VALUE]))
			FROM STRING_SPLIT(@ITEM,',')
			--tạo nhiều thì nguyên liệu cũng chính là thành phẩm.
			INSERT INTO prod.[MATERIALS_IN_PACKAGE]([GUID],ITEM_IN_PACKAGE_ID,ITEM_ID,QUANTITY)
			SELECT NEWID(), IIP.ID, IIP.ITEM_ID, IIP.QUANTITY
			FROM prod.[ITEM_IN_PACKAGE] IIP
			WHERE IIP.PACKAGE_ID = @PACKAGE_ID
		END

	COMMIT
	-- Trả về pallet
	SELECT 
	PL.ID id,
	PL.CODE code,
	@STEP_OF_PALLET_ID step_of_pallet_id,
	PL.CREATE_BY create_by,
	PL.CREATE_DATE create_date
	FROM prod.[PALLET] PL
	WHERE PL.ID = @PALLET_ID

	-- Trả về thông tin package
	SELECT 
	P.ID packageId,
	P.SOURCE_ID fromId,
	P.DESTINATION_ID toId,
	P.CREATE_BY createBy,
	P.CREATE_DATE createDate
	FROM prod.PALLET PL
	LEFT JOIN prod.STEP_OF_PALLET SOP ON SOP.PALLET_ID = PL.ID
	LEFT JOIN prod.PACKAGE P ON P.STEP_OF_PALLET_ID = SOP.ID
	WHERE PL.ID = @PALLET_ID
	-- Trả về thông tin item trong package
	SELECT 
	P.ID packageId,
	IIP.ID itemInPackageId,
	IIP.ITEM_ID itemId,
	IIP.QUANTITY quantity
	FROM prod.PALLET PL
	LEFT JOIN prod.STEP_OF_PALLET SOP ON SOP.PALLET_ID = PL.ID
	LEFT JOIN prod.PACKAGE P ON P.STEP_OF_PALLET_ID = SOP.ID
	LEFT JOIN prod.ITEM_IN_PACKAGE IIP ON IIP.PACKAGE_ID = P.ID
	WHERE PL.ID = @PALLET_ID
	-- Trả về nguyên liệu của pallet này
	SELECT 
	IIP.ID itemInPackageId,
	MIP.ID materialsInPackageId,
	MIP.ITEM_ID itemId,
	MIP.QUANTITY quantity
	FROM prod.PALLET PL
	LEFT JOIN prod.STEP_OF_PALLET SOP ON SOP.PALLET_ID = PL.ID
	LEFT JOIN prod.PACKAGE P ON P.STEP_OF_PALLET_ID = SOP.ID
	LEFT JOIN prod.ITEM_IN_PACKAGE IIP ON IIP.PACKAGE_ID = P.ID
	LEFT JOIN prod.MATERIALS_IN_PACKAGE MIP ON MIP.ITEM_IN_PACKAGE_ID = IIP.ID
	WHERE PL.ID = @PALLET_ID
END