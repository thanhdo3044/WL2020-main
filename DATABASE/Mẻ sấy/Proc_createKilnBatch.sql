/*
DECLARE @E INT
EXEC Proc_createKilnBatch
100000,
5,
100000,
@ERROR = @E OUTPUT
*/


CREATE OR ALTER PROC Proc_createKilnBatch
@KILN_ID INT,
@STEP_NEXT_ID INT,
@TARGET INT,
@LENGTH INT,
@HEIGHT NVARCHAR(50),
@TYPE NVARCHAR(200),
@ACCOUNT_ID INT,
@ERROR INT OUTPUT
AS
BEGIN
	SET XACT_ABORT ON
	BEGIN TRANSACTION 
	DECLARE @KILN_BATCH_NUMBER INT
	DECLARE @KILN_BATCH_GUID UNIQUEIDENTIFIER = NEWID()

	IF EXISTS (
			SELECT ID FROM prod.[KILN_BATCH]
			WHERE KILN_ID = @KILN_ID
			AND TIME_OUT_REAL IS NULL
	)
	BEGIN
		SET @ERROR = 420
		ROLLBACK
		RETURN
	END


	SELECT @KILN_BATCH_NUMBER = MAX([NUMBER])
	FROM prod.[KILN_BATCH]
	WHERE [YEAR] = YEAR(GETDATE())
	AND [WEEK] = DATEPART(WK,GETDATE())

	IF @KILN_BATCH_NUMBER IS NULL
		BEGIN
			SET @KILN_BATCH_NUMBER = 1
		END
	ELSE
		BEGIN
			SET @KILN_BATCH_NUMBER = @KILN_BATCH_NUMBER + 1
		END



	INSERT INTO prod.[KILN_BATCH]([GUID],NUMBER,[WEEK],[YEAR],KILN_ID,STEP_NEXT_ID,TIME_OUT_TARGET,[LENGTH],[HEIGHT],[TYPE],[STATUS],CREATE_BY,CREATE_DATE)
	VALUES(@KILN_BATCH_GUID,@KILN_BATCH_NUMBER,DATEPART(WK,GETDATE()),YEAR(GETDATE()),@KILN_ID,@STEP_NEXT_ID,@TARGET,@LENGTH,@HEIGHT,@TYPE,'created',@ACCOUNT_ID,GETDATE())

	SELECT ID 
	FROM prod.[KILN_BATCH]
	WHERE [GUID] = @KILN_BATCH_GUID

	COMMIT
END